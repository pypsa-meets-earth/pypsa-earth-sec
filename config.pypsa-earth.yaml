# SPDX-FileCopyrightText: : 2021 The PyPSA-Africa Authors
#
# SPDX-License-Identifier: CC0-1.0


version: 0.0.2
tutorial: false

logging:
  level: INFO
  format: "%(levelname)s:%(name)s:%(message)s"

scenario:
  simpl: ['']
  ll: ['1.0']
  clusters: [203]
  opts: [Co2L1-144H]

countries: ["MA"]
# Can be replaced by country ["NG", "BJ"] or user specific region, more at https://pypsa-meets-earth.readthedocs.io/en/latest/configuration.html#top-level-configuration

snapshots:
  start: "2013-01-01"
  end: "2014-01-01"
  inclusive: "left" # end is not inclusive

enable:
  retrieve_databundle: false  #  Recommended 'true', for the first run. Otherwise data might be missing.
  download_osm_data: false  # If 'true', OpenStreetMap data will be downloaded for the above given countries
  build_natura_raster: false  # If True, than an exclusion raster will be build
  build_cutout: true
  # If "build_cutout" : true, then environmental data is extracted according to `snapshots` date range and `countries`
  # requires cds API key https://cds.climate.copernicus.eu/api-how-to
  # More information https://atlite.readthedocs.io/en/latest/introduction.html#datasets

# definition of the Coordinate Reference Systems
crs:
  geo_crs: EPSG:4326  # general geographic projection, not used for metric measures. "EPSG:4326" is the standard used by OSM and google maps
  distance_crs: EPSG:3857  # projection for distance measurements only. Possible recommended values are "EPSG:3857" (used by OSM and Google Maps)
  area_crs: ESRI:54009  # projection for area measurements only. Possible recommended values are Global Mollweide "ESRI:54009"

# download_osm_data_nprocesses: 10  # (optional) number of threads used to download osm data

augmented_line_connection:
  add_to_snakefile: false  # If True, includes this rule to the workflow
  connectivity_upgrade: 3  # Min. lines connection per node, https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.connectivity.edge_augmentation.k_edge_augmentation.html#networkx.algorithms.connectivity.edge_augmentation.k_edge_augmentation
  new_line_type: "HVDC"  # Expanded lines can be either "HVAC" or "HVDC"
  min_expansion: 1  # New created line expands by float/int input [MW]

cluster_options:
  alternative_clustering: true  # "False" use Voronoi shapes, "True" use GADM shapes
  distribute_cluster: ['load'] # Distributes cluster nodes per country according to ['load'],['pop'] or ['gdp']
  out_logging: true  # When "True", logging is printed to console
  aggregation_strategies:
    generators:
      p_nom_max: sum # use "min" for more conservative assumptions
      p_nom_min: sum
      p_min_pu: mean
      marginal_cost: mean
      committable: any
      ramp_limit_up: max
      ramp_limit_down: max
      efficiency: mean

build_shape_options:
  gadm_layer_id: 2  # GADM level area used for the gadm_shapes. Codes are country-dependent but roughly: 0: country, 1: region/county-like, 2: municipality-like
  update_file: false  # When true, all the input files are downloaded again and replace the existing files
  out_logging: true  # When true, logging is printed to console
  year: 2020  # reference year used to derive shapes, info on population and info on GDP
  nprocesses: 5  # number of processes to be used in build_shapes
  worldpop_method: "standard"  # "standard" pulls from web 1kmx1km raster, "api" pulls from API 100mx100m raster, false (not "false") no pop addition to shape which is useful when generating only cutout
  gdp_method: "standard"  # "standard" pulls from web 1x1km raster, false (not "false") no gdp addition to shape which useful when generating only cutout

clean_osm_data_options:  # osm = OpenStreetMap
  names_by_shapes: true  # Set the country name based on the extended country shapes
  threshold_voltage: 35000  # [V] assets below that voltage threshold will not be used (cable, line, generator, etc.)
  tag_substation: "transmission"  # Filters only substations with 'transmission' tag, ('distribution' also available)
  add_line_endings: true  # When "True", then line endings are added to the dataset of the substations
  generator_name_method: OSM  # Methodology to specify the name to the generator. Options: OSM (name as by OSM dataset), closest_city (name by the closest city)

build_osm_network:  # Options of the build_osm_network script; osm = OpenStreetMap
  group_close_buses: true  # When "True", close buses are merged and guarantee the voltage matching among line endings
  group_tolerance_buses: 1000  # [m] (default 500) Tolerance in meters of the close buses to merge
  split_overpassing_lines: true  # When True, lines overpassing buses are splitted and connected to the bueses
  overpassing_lines_tolerance: 1  # [m] (default 1) Tolerance to identify lines overpassing buses

base_network:
  min_voltage_substation_offshore: 35000  # [V] minimum voltage of the offshore substations
  min_voltage_rebase_voltage: 35000  # [V] minimum voltage in base network

load_options:
  ssp: "ssp2-2.6" # shared socio-economic pathway (GDP and population growth) scenario to consider
  weather_year: 2013  # Load scenarios available with different weather year (different renewable potentials)
  prediction_year: 2030  # Load scenarios available with different prediction year (GDP, population)
  scale: 1  # scales all load time-series, i.e. 2 = doubles load

electricity:
  voltages: [220., 300., 380.]
  co2limit: 4.0e+3 # 0.05 * 3.1e9*0.5
  co2base: 1.487e+8
  agg_p_nom_limits: data/agg_p_nom_minmax.csv
  hvdc_as_lines: true # should HVDC lines be modeled as `Line` or as `Link` component?

  operational_reserve: # like https://genxproject.github.io/GenX/dev/core/#Reserves
    activate: false
    epsilon_load: 0.02 # share of total load
    epsilon_vres: 0.02 # share of total renewable supply
    contingency: 0 # fixed capacity in MW

  max_hours:
    battery: 6
    H2: 168

  extendable_carriers:
    Generator: [solar, onwind, offwind-ac, offwind-dc, OCGT]
    StorageUnit: []  # battery, H2
    Store: []
    Link: []  # H2 pipeline

  powerplants_filter: (DateOut >= 2022 or DateOut != DateOut)
  custom_powerplants: false

  conventional_carriers: [nuclear, oil, OCGT, CCGT, coal, lignite, geothermal, biomass]
  renewable_carriers: [solar, onwind, offwind-ac, offwind-dc, hydro]

  estimate_renewable_capacities:
    stats: "irena"  # False, = greenfield expansion, 'irena' uses IRENA stats to add expansion limits
    year: 2020  # Reference year, available years for IRENA stats are 2000 to 2020
    p_nom_min: 1  # any float, scales the minimum expansion acquired from stats, i.e. 110% of <years>'s capacities => p_nom_min: 1.1
    p_nom_max: 2  # sets the expansion constraint, False to deactivate this option and use estimated renewable potentials determine by the workflow, float scales the p_nom_min factor accordingly
    technology_mapping:
      # Wind is the Fueltype in ppm.data.Capacity_stats, onwind, offwind-{ac,dc} the carrier in PyPSA-Earth
      Offshore: [offwind-ac, offwind-dc]
      Onshore: [onwind]
      PV: [solar]

lines:
  types:
    220.: "Al/St 240/40 2-bundle 220.0"
    300.: "Al/St 240/40 3-bundle 300.0"
    380.: "Al/St 240/40 4-bundle 380.0"
  dc_type: "DC_custom_linetype"
  s_max_pu: 0.7
  s_nom_max: .inf
  length_factor: 1.25
  under_construction: "zero" # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity

links:
  p_max_pu: 1.0
  p_nom_max: .inf
  include_tyndp: true
  under_construction: "zero" # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity

transformers:
  x: 0.1
  s_nom: 2000.
  type: ""

atlite:
  nprocesses: 4
  cutouts:
    # geographical bounds automatically determined from countries input
    africa-2013-era5:
      module: era5
      dx: 0.3  # cutout resolution
      dy: 0.3  # cutout resolution
      # Below customization options are dealt in an automated way depending on
      # the snapshots and the selected countries. See 'build_cutout.py'
      # time: ["2013-01-01", "2014-01-01"]  # specify different weather year (~40 years available)
      # x: [-12., 35.]  # manual set cutout range
      # y: [33., 72]    # manual set cutout range


renewable:
  onwind:
    cutout: africa-2013-era5
    resource:
      method: wind
      turbine: Vestas_V112_3MW
    capacity_per_sqkm: 3 # conservative, ScholzPhd Tab 4.3.1: 10MW/km^2
    # correction_factor: 0.93
    copernicus:
      # Scholz, Y. (2012). Renewable energy based electricity supply at low costs:
      #  development of the REMix model and application for Europe. ( p.42 / p.28)
      # CLC grid codes:
      # 11X/12X - Various forest types
      # 20  - Shrubs
      # 30  - Herbaceus vegetation
      # 40  - Cropland
      # 50  - Urban
      # 60  - Bare / Sparse vegetation
      # 80  - Permanent water bodies
      # 100 - Moss and lichen
      # 200 - Open sea
      grid_codes: [20, 30, 40, 60, 100, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126]
      distance: 1000
      distance_grid_codes: [50]
    natura: true
    potential: simple # or conservative
    clip_p_max_pu: 1.e-2
    extendable: true
  offwind-ac:
    cutout: africa-2013-era5
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_5MW_offshore
    capacity_per_sqkm: 2
    correction_factor: 0.8855
    # proxy for wake losses
    # from 10.1016/j.energy.2018.08.153
    # until done more rigorously in #153
    copernicus:
      grid_codes: [80, 200]
    natura: true
    max_depth: 50
    max_shore_distance: 30000
    potential: simple # or conservative
    clip_p_max_pu: 1.e-2
    extendable: true
  offwind-dc:
    cutout: africa-2013-era5
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_5MW_offshore
    # ScholzPhd Tab 4.3.1: 10MW/km^2
    capacity_per_sqkm: 3
    correction_factor: 0.8855
    # proxy for wake losses
    # from 10.1016/j.energy.2018.08.153
    # until done more rigorously in #153
    copernicus:
      grid_codes: [80, 200]
    natura: true
    max_depth: 50
    min_shore_distance: 30000
    potential: simple # or conservative
    clip_p_max_pu: 1.e-2
    extendable: true
  solar:
    cutout: africa-2013-era5
    resource:
      method: pv
      panel: CSi
      orientation: latitude_optimal # will lead into optimal design
        # slope: 0.  # slope: 0 represent a flat panel
        # azimuth: 180.  # azimuth: 180 south orientation
    capacity_per_sqkm: 4.6 # From 1.7 to 4.6 addresses issue #361 # ScholzPhd Tab 4.3.1: 170 MW/km^2
    # Determined by comparing uncorrected area-weighted full-load hours to those
    # published in Supplementary Data to
    # Pietzcker, Robert Carl, et al. "Using the sun to decarbonize the power
    # sector: The economic potential of photovoltaics and concentrating solar
    # power." Applied Energy 135 (2014): 704-720.
    correction_factor: 0.854337
    copernicus:
      grid_codes: [20, 30, 40, 50, 60, 90, 100]
    natura: true
    potential: simple # or conservative
    clip_p_max_pu: 1.e-2
    extendable: true
  hydro:
    cutout: africa-2013-era5
    resource:
      method: hydro
      hydrobasins: data/hydrobasins/hybas_world_lev06_v1c.shp
      flowspeed: 1.0  # m/s
      # weight_with_height: false
      # show_progress: true
      normalization: hydro_capacities # 'hydro_capacities' to normalize country production by using hydro_capacities, 'eia' to normalize by eia data, false for no normalization
    carriers: [ror, PHS, hydro]
    PHS_max_hours: 6
    hydro_max_hours: "energy_capacity_totals_by_country"  # not active
    clip_min_inflow: 1.0
    extendable: true
    normalization_multiplier: 1.1  # multiplier applied after the normalization of the hydro production

# TODO: Needs to be adjusted for Africa
costs:
  year: 2030
  discountrate: 0.07 # From a Lion Hirth paper, also reflects average of Noothout et al 2016
  USD2013_to_EUR2013: 0.7532 # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html
  marginal_cost: # EUR/MWh
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices: # in currency per tonne emission, only used with the option Ep
    co2: 0.

monte_carlo:
  options:
    add_to_snakefile: false
    samples: 7    # number of optimizations
    sampling_strategy: "chaospy"    # "pydoe2", "chaospy", "scipy", packages that are supported
  pypsa_standard:
      # User can add here flexibly more features for the Monte-Carlo sampling.
      # Given as "key: value" format
      # Key: add below the pypsa object for the monte_carlo sampling, "network" is only allowed for filtering!
      # Value: currently supported format [l_bound, u_bound] or empty [], represent multiplication factors for the object
    loads_t.p_set: [0.9, 1.1]
    generators_t.p_max_pu.loc[:, n.generators.carrier == "wind"]: [0.9, 1.1]
    generators_t.p_max_pu.loc[:, n.generators.carrier == "solar"]: [0.9, 1.1]


solving:
  options:
    formulation: kirchhoff
    load_shedding: true
    noisy_costs: true
    min_iterations: 4
    max_iterations: 6
    clip_p_max_pu: 0.01
    skip_iterations: true
    track_iterations: false
    #nhours: 10
  solver:
    name: gurobi
    threads: 4
    method: 2 # barrier (=ipm)
    crossover: 0
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-6
    AggFill: 0
    PreDual: 0
    GURO_PAR_BARDENSETHRESH: 200


plotting:
  map:
    figsize: [7, 7]
    boundaries: [-10.2, 29, 35, 72]
    p_nom:
      bus_size_factor: 5.e+4
      linewidth_factor: 3.e+3

  costs_max: 800
  costs_threshold: 1

  energy_max: 15000.
  energy_min: -10000.
  energy_threshold: 50.

  vre_techs: ["onwind", "offwind-ac", "offwind-dc", "solar", "ror"]
  # conv_techs: ["OCGT", "CCGT", "nuclear", "coal", "oil"]
  conv_techs: []
  storage_techs: ["hydro+PHS", "battery", "H2"]
  load_carriers: ["AC load"]
  AC_carriers: ["AC line", "AC transformer"]
  link_carriers: ["DC line", "Converter AC-DC"]
  tech_colors:
    "onwind": "#235ebc"
    "onshore wind": "#235ebc"
    "offwind": "#6895dd"
    "offwind-ac": "#6895dd"
    "offshore wind": "#6895dd"
    "offshore wind ac": "#6895dd"
    "offwind-dc": "#74c6f2"
    "offshore wind dc": "#74c6f2"
    "hydro": "#08ad97"
    "hydro+PHS": "#08ad97"
    "PHS": "#08ad97"
    "hydro reservoir": "#08ad97"
    "hydroelectricity": "#08ad97"
    "ror": "#4adbc8"
    "run of river": "#4adbc8"
    "solar": "#f9d002"
    "solar PV": "#f9d002"
    "solar thermal": "#ffef60"
    "biomass": "#0c6013"
    "solid biomass": "#06540d"
    "biogas": "#23932d"
    "waste": "#68896b"
    "geothermal": "#ba91b1"
    "OCGT": "#d35050"
    "gas": "#d35050"
    "natural gas": "#d35050"
    "CCGT": "#b20101"
    "nuclear": "#ff9000"
    "coal": "#707070"
    "lignite": "#9e5a01"
    "oil": "#262626"
    "H2": "#ea048a"
    "hydrogen storage": "#ea048a"
    "battery": "#b8ea04"
    "Electric load": "#f9d002"
    "electricity": "#f9d002"
    "lines": "#70af1d"
    "transmission lines": "#70af1d"
    "AC-AC": "#70af1d"
    "AC line": "#70af1d"
    "links": "#8a1caf"
    "HVDC links": "#8a1caf"
    "DC-DC": "#8a1caf"
    "DC link": "#8a1caf"
    "load": "#FF0000"
  nice_names:
    OCGT: "Open-Cycle Gas"
    CCGT: "Combined-Cycle Gas"
    offwind-ac: "Offshore Wind (AC)"
    offwind-dc: "Offshore Wind (DC)"
    onwind: "Onshore Wind"
    solar: "Solar"
    PHS: "Pumped Hydro Storage"
    hydro: "Reservoir & Dam"
    battery: "Battery Storage"
    H2: "Hydrogen Storage"
    lines: "Transmission Lines"
    ror: "Run of River"
